{"version":3,"sources":["testRules.js","App.js","reportWebVitals.js","index.js"],"names":["testRules","name","value","App","useState","fileName","setFileName","rule","disabled","onClick","height","theme","path","defaultLanguage","defaultValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAqHeA,EAfG,CACd,aAAc,CACVC,KAAM,aACNC,MAzGG,8pBA2GP,aAAc,CACVD,KAAM,aACNC,MA3EG,ypBA6EP,aAAc,CACVD,KAAM,aACNC,MA7CG,0pB,OC1BIC,MArCf,WAEE,MAAgCC,mBAAS,cAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAOP,EAAUK,GAEvB,OACE,qCACE,wBACEG,SAAuB,eAAbH,EACVI,QAAS,kBAAMH,EAAY,eAF7B,wBAMA,wBACEE,SAAuB,eAAbH,EACVI,QAAS,kBAAMH,EAAY,eAF7B,wBAMA,wBACEE,SAAuB,eAAbH,EACVI,QAAS,kBAAMH,EAAY,eAF7B,wBAMA,cAAC,IAAD,CACEI,OAAO,OACPC,MAAM,UACNC,KAAML,EAAKN,KACXY,gBAAgB,OAChBC,aAAcP,EAAKL,YCxBZa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.29e9d9ac.chunk.js","sourcesContent":["const rule1 = `\r\nCoreId: Rule271828\r\nVersion: 1\r\nAuthority:\r\n    Organization: CDISC\r\nReference:\r\n    Origin: SDTM Conformance Rules\r\n    Version: 1.1\r\n    Id: CG0082\r\nDescription: Verify...\r\nSensitivity: Record\r\nScopes:\r\n    Standards:\r\n    - Name: SDTMIG\r\n        Version: 3.3\r\n    - Name: SDTMIG\r\n        Version: 3.4\r\n    Classes:\r\n    Include:\r\n        - Events\r\n        - Findings\r\n    Domains:\r\nRule Type:\r\n    Value Presence:\r\n    Conditions: --BODSYS IS NULL\r\n    Check: --BDSYCD IS NOT NULL\r\nOutcome:\r\n    Message: --BDSYCD is populated when --BODSYS is null\r\nCitations:\r\n    - Document: SDTM v1.4\r\n    Section: 2.2.2\r\n    Cited Guidance: Variable Qualifier of --BODSYS\r\n`;\r\n\r\nconst rule2 = `\r\nCoreId: Rule2\r\nVersion: 1\r\nAuthority:\r\n    Organization: CDISC\r\nReference:\r\n    Origin: SDTM Conformance Rules\r\n    Version: 1.1\r\n    Id: CG0082\r\nDescription: Verify...\r\nSensitivity: Record\r\nScopes:\r\n    Standards:\r\n    - Name: SDTMIG\r\n        Version: 3.3\r\n    - Name: SDTMIG\r\n        Version: 3.4\r\n    Classes:\r\n    Include:\r\n        - Events\r\n        - Findings\r\n    Domains:\r\nRule Type:\r\n    Value Presence:\r\n    Conditions: --BODSYS IS NULL\r\n    Check: --BDSYCD IS NOT NULL\r\nOutcome:\r\n    Message: --BDSYCD is populated when --BODSYS is null\r\nCitations:\r\n    - Document: SDTM v1.4\r\n    Section: 2.2.2\r\n    Cited Guidance: Variable Qualifier of --BODSYS\r\n`;\r\n\r\nconst rule3 = `\r\nCoreId: Rule3\r\nVersion: 1\r\nAuthority:\r\n    Organization: CDISC\r\nReference:\r\n    Origin: SDTM Conformance Rules\r\n    Version: 1.1\r\n    Id: CG0082\r\nDescription: Verify...\r\nSensitivity: Record\r\nScopes:\r\n    Standards:\r\n    - Name: SDTMIG\r\n        Version: 3.3\r\n    - Name: SDTMIG\r\n        Version: 3.4\r\n    Classes:\r\n    Include:\r\n        - Events\r\n        - Findings\r\n    Domains:\r\nRule Type:\r\n    Value Presence:\r\n    Conditions: --BODSYS IS NULL\r\n    Check: --BDSYCD IS NOT NULL\r\nOutcome:\r\n    Message: --BDSYCD is populated when --BODSYS is null\r\nCitations:\r\n    - Document: SDTM v1.4\r\n    Section: 2.2.2\r\n    Cited Guidance: Variable Qualifier of --BODSYS\r\n`;\r\n\r\nconst testRules = {\r\n    \"rule1.yaml\": {\r\n        name: \"rule1.yaml\",\r\n        value: rule1\r\n    },\r\n    \"rule2.yaml\": {\r\n        name: \"rule2.yaml\",\r\n        value: rule2\r\n    },\r\n    \"rule3.yaml\": {\r\n        name: \"rule3.yaml\",\r\n        value: rule3\r\n    },\r\n};\r\n\r\nexport default testRules;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport './App.css';\r\nimport Editor from \"@monaco-editor/react\";\r\nimport testRules from \"./testRules\";\r\n\r\nfunction App() {\r\n\r\n  const [fileName, setFileName] = useState(\"rule1.yaml\");\r\n\r\n  const rule = testRules[fileName];\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        disabled={fileName === \"rule1.yaml\"}\r\n        onClick={() => setFileName(\"rule1.yaml\")}\r\n      >\r\n        rule1.yaml\r\n      </button>\r\n      <button\r\n        disabled={fileName === \"rule2.yaml\"}\r\n        onClick={() => setFileName(\"rule2.yaml\")}\r\n      >\r\n        rule2.yaml\r\n      </button>\r\n      <button\r\n        disabled={fileName === \"rule3.yaml\"}\r\n        onClick={() => setFileName(\"rule3.yaml\")}\r\n      >\r\n        rule3.yaml\r\n      </button>\r\n      <Editor\r\n        height=\"80vh\"\r\n        theme=\"vs-dark\"\r\n        path={rule.name}\r\n        defaultLanguage=\"yaml\"\r\n        defaultValue={rule.value}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}